class Solution {
public:
    int findTheCity(int n, vector<vector<int>>& edges, int distanceThreshold) {
        vector<vector<int>> distance(n, vector<int>(n, INT_MAX));
        for(auto it : edges){
            distance[it[0]][it[1]] = it[2];
            distance[it[1]][it[0]] = it[2];
        }

        for(int i = 0; i < n; i++){
            distance[i][i] = 0;
        }
        for(int i = 0; i < n ; i++){
            for(int j = 0; j < n; j++){
                for(int k = 0; k < n; k++){
                    if(distance[i][j] == INT_MAX || distance[i][k] == INT_MAX)
                        continue;
                    distance[j][k] = min(distance[j][k], distance[j][i] + distance[i][k]);
                }
            }
        }
        
        int countcity = n;
        int cityno = -1;
        for(int city = 0; city < n; city++){
            int count = 0;
            for(int adjcity = 0; adjcity < n; adjcity++){
                if(distance[city][adjcity] <= distanceThreshold)
                    count++;
            }
            if(count <= countcity){
                countcity = count;
                cityno = city;
            }
        }
        return cityno;
    }
};
